#!/bin/bash

# SPDX-FileCopyrightText: 2020 Henrik Sandklef <hesa@sandklef.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

#INSTALL_DIR=$(dirname $(realpath $(which $0)) | sed 's,\/bin,,g'
PROGRAM_NAME=__PROGRAM_NAME__
DATA_DIR=__DATA_DIR__

PROGRAM_DATA_PATH=$PROGRAM_NAME
JAR_DIR=$INSTALL_DIR/share/lib
if [ "$DATA_DIR" = "" ]
then
    INSTALL_DIR=$(dirname $(realpath $(which $0)) | sed 's,\/bin,,g')
    PROGRAM_DATA_PATH=
    DATA_DIR=$INSTALL_DIR/share
    JAR_DIR=$INSTALL_DIR/lib
fi

DOCKER_DEVEL_CLASSPATH="lib/gson-2.2.2.jar:lib/commons-cli-1.4.jar:lib/flict.jar:."
CLASSPATH="$JAR_DIR/gson-2.2.2.jar:$JAR_DIR/commons-cli-1.4.jar:$JAR_DIR/flict.jar:$DOCKER_DEVEL_CLASSPATH"
DEFAULT_LICENSE_ARGS=" --license-dir ${DATA_DIR}/$PROGRAM_DATA_PATH/licenses/json "
DEFAULT_COMPAT_ARGS=" --compatibility-file ${DATA_DIR}/$PROGRAM_DATA_PATH/licenses/connections/compatibilities.json"
DEFAULT_LATER_ARGS=" --later-file ${DATA_DIR}/$PROGRAM_DATA_PATH/licenses/later/later-definitions.json"
CLASS="com.sandklef.compliance.cli.LicenseChecker"


# basic verification of json files
jq --version >/dev/null 2>&1
RET=$?
if [ $RET -eq 0 ]
then
    JSON_FILES=$(echo $* | tr ' ' '\n' | grep -e  ".json$" )
    for FILE in $JSON_FILES
    do
        #   echo check file $FILE
        #    wc -l $FILE
        if [ -f $FILE ] && [ "$FILE" != "" ]
        then
            jq '.' $FILE >/dev/null 2>&1
            RET=$?
            if [ $RET -ne 0 ]
            then
                echo "File \"$FILE\" does not seem to be a valid JSON file"
                exit 1
            fi
        fi
    done
fi


ARGS=
while [ "$1" != "" ]
do
    case "$1" in
        "--pdf")
            ARGS="$ARGS --markdown"
            TMP_MD=tmp.md
            rm -f $TMP_MD
            ;;
        "--connection-graph"|"-cg")
            CONNECTION_GRAPH=true
            ;;
        "--later-file"|"-lf")
            LATER_FILE=true
            ARGS="$ARGS \"$1\""
            ;;
        "--license-dir"|"-ld")
            LICENSE_DIR=true
            ARGS="$ARGS \"$1\""
            ;;
        "--compatibility-file"|"-cf")
            COMPAT_FILE=true
            ARGS="$ARGS \"$1\""
            ;;
        *)
            ARGS="$ARGS \"$1\""
            ;;
    esac
    shift
done 

if [ "$LICENSE_DIR" = "true" ]
then
    DEFAULT_LICENSE_ARGS=""
fi

if [ "$COMPAT_FILE" = "true" ]
then
    DEFAULT_COMPAT_ARGS=""
fi

if [ "$LATER_FILE" = "true" ]
then
    DEFAULT_LATER_ARGS=""
fi


run()
{
    echo java -cp "$CLASSPATH" "$CLASS" "$DEFAULT_LICENSE_ARGS" "$DEFAULT_COMPAT_ARGS" "$DEFAULT_LATER_ARGS" $ARGS $* | sh
    export COMPLIANCE_RET=$?
}


#echo THESE: $ARGS
if [ "$CONNECTION_GRAPH" = "true" ] || [ "$TMP_MD" != "" ]
then
    TMP_DOT=tmp.dot
    rm -f $TMP_DOT
    FILE_NAME=license-connections
    run -cg -o ${FILE_NAME}.dot &&  dot -Tpdf ${FILE_NAME}.dot  > ${FILE_NAME}.pdf
#    echo created ${FILE_NAME}.pdf
#    exit $COMPLIANCE_RET
fi

if [ "$TMP_MD" != "" ]
then
#    echo "$ARGS"
    run > $TMP_MD
    pandoc $TMP_MD -o tmp.pdf
    printf "# License Compatibility graph\n\nThe following license graph have been used" > tmp-graph.md
    pandoc tmp-graph.md -o tmp-graph.pdf
    pdfunite tmp.pdf tmp-graph.pdf ${FILE_NAME}.pdf report.pdf
    #    evince report.pdf
    echo "Created report.pdf"
    exit $COMPLIANCE_RET
else
    run
    exit $COMPLIANCE_RET
fi

