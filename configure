#!/bin/bash

P_NAME="FOSS License Compliance Tool"
PROGRAM_NAME=flict
LOG_FILE=configure.log

check_dependency()
{
    echo checking $1 >> $LOG_FILE 2>&1
    which $1 2>/dev/null >/dev/null 
    if [ $? -ne 0 ]
    then
        echo "$1 seems to be missing."
        echo
        exit 1
    fi

}

check_dependencies()
{
    check_dependency java
    check_dependency javac
    check_dependency jq
    check_dependency make
}

# User preset
USER_INSTALL_BIN_DIR=\~/.local/bin/
USER_INSTALL_DATA_DIR=\~/.local/share/

# Multi user preset
MULTI_USER_BIN_DIR=/usr/bin/
MULTI_USER_DATA_DIR=/usr/share/

# Docker preset
DOCKER_BIN_DIR=
DOCKER_DATA_DIR=

# Dist preset
DIST_BIN_DIR=
DIST_DATA_DIR=

#
DEVEL_BIN_DIR=./
DEVEL_DATA_DIR=./

#
# Default
#
BIN_DIR="$USER_INSTALL_BIN_DIR"
DATA_DIR="$USER_INSTALL_DATA_DIR"

usage()
{
    echo ""
    echo "configure"
    echo 
    echo "  --user-installation"
    echo "    Set installation directories to:"
    echo "      BIN_DIR=$USER_INSTALL_BIN_DIR"
    echo "      DATA_DIR=$USER_INSTALL_DATA_DIR"
    echo "    This is default"
    echo 
    echo "  --multi-user-installation"
    echo "    Set installation directories to:"
    echo "      BIN_DIR=$MULTI_USER_INSTALL_BIN_DIR"
    echo "      DATA_DIR=$MULTI_USER_INSTALL_DATA_DIR"
    echo ""
    echo "  --dist-installation"
    echo "    Set installation directories to:"
    echo "      BIN_DIR=$DIST_BIN_DIR"
    echo "      DATA_DIR=$DIST_DATA_DIR"
    echo ""
    echo "  --docker"
    echo "    Set directories to:"
    echo "      BIN_DIR=$DOCKER_INSTALL_BIN_DIR"
    echo "      DATA_DIR=$DOCKER_INSTALL_DATA_DIR"
    echo ""
    echo "  --devel"
    echo "    Set installation directories to:"
    echo "      BIN_DIR=$DEVEL_BIN_DIR"
    echo "      DATA_DIR=$DEVEL_DATA_DIR"
    echo ""
    echo "  --bin-dir=DIR"
    echo ""
    echo "    Set installation bin directory to: DIR"
    echo ""
    echo "  --data-dir=DIR"
    echo "    Set installation data directory to: DIR"
    echo ""
    echo "  --help"
    echo "    Print usage information"
    echo ""
}

parse()
{
    while [ "$1" != "" ]
    do
        if [[ "$1" =~ "--user-installation" ]]
        then
            BIN_DIR="$USER_INSTALL_BIN_DIR"
            DATA_DIR="$USER_INSTALL_DATA_DIR"
        elif [[ "$1" =~ "--multi-user-installation" ]]
        then
            BIN_DIR="$MULTI_USER_BIN_DIR"
            DATA_DIR="$MULTI_USER_DATA_DIR"
        elif [[ "$1" =~ "--docker-installation" ]]
        then
            BIN_DIR="$DOCKER_BIN_DIR"
            DATA_DIR="$DOCKER_DATA_DIR"
        elif [[ "$1" =~ "--devel" ]]
        then
            BIN_DIR="$DEVEL_BIN_DIR"
            DATA_DIR="$DEVEL_DATA_DIR"
        elif [[ "$1" =~ "--dist-installation" ]]
        then
            BIN_DIR="$DIST_BIN_DIR"
            DATA_DIR="$DIST_DATA_DIR"
        elif [[ "$1" =~ "--bin-dir=" ]]
        then
            BIN_DIR=$(echo $1 | sed 's,--bin-dir=,,g')
        elif [[ "$1" =~ "--data-dir=" ]]
        then
            DATA_DIR=$(echo $1 | sed 's,--data-dir=,,g')/
        elif [[ "$1" = "--help" ]]
        then
            usage
            exit 0
        else
            echo "SYNTAX ERROR - \"$1\""
            usage       
            exit 1
        fi
        shift
    done
}

parse $*



echo -n "Preparing Makefile: "
cat Makefile.in | \
    sed "s,__PROGRAM_NAME__,$PROGRAM_NAME,g" | \
    sed "s,__BIN_DIR__,$BIN_DIR,g" | \
    sed "s,__DATA_DIR__,$DATA_DIR,g" > Makefile
if [ $? -ne 0 ] ; then
    echo "Failed creating Makefile"; exit 1;
fi

cat bin/flict.in | \
    sed "s,__PROGRAM_NAME__,$PROGRAM_NAME,g" | \
    sed "s,__BIN_DIR__,$BIN_DIR,g" | \
    sed "s,__DATA_DIR__,$DATA_DIR,g" > bin/flict
chmod a+x bin/flict
if [ $? -ne 0 ] ; then
    echo "Failed creating script"; exit 1;
fi
echo "OK $MSG"

echo -n "Check dependencies: "
check_dependencies
echo "OK"

echo
echo " .... configure finished successfully :)"
echo ""
